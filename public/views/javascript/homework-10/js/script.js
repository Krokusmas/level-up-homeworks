'use strict';
// Unit link - https://learn.javascript.ru/global-object

// Task 1
// Ответ: 1. Т.к. на момент выполнения цикла переменная а уже объявлена и объект window уже имеет свойство а. Затем в цикле в переменную записывается значение и дальше по коду выводится на экран.

// Task 2
// Ответ: ошибка. Т.к. без var переменная не попала в глобальный объект window и выполнение кода не зайдет в цикл - свойства а не существует.

// Task 3
// ответ: 1. Т.к. Переменная объявлена через var. Свойство а глобального объекта создано, выполнится цикл с присвоением значения 1 и затем выведется результат на экран.

// Unit link - https://learn.javascript.ru/closures

// Task 1
// Сообщение выведется, но вместо переменной phrase будет undefined, т.к. функция объявлена через fuction declaration и попала в лексическое окружение window. Переменная phrase объявлена через var и тоже сразу попала в лексическое окружение window, но еще с неприсвоенным значением.

// Task 2
// Каков будет результат выполнения этого кода?
// Ответ: true. Переменная value объявлена в этой функции ниже через var и находится в лексическом окружении функции. В её значение записывается true для кода внутри функции и выводтся на экран.
// Изменится ли внешняя переменная value ?
// Ответ: нет. Переменная value объявлена в этой функции ниже через var и находится в лексическом окружении функции.
// Какими будут ответы, если из строки var value = false убрать var?
// Ответ: результаты вызова функции останутся прежними. Но переменная value не будет найдена в Л.О. функции и поиск пойдет на уровень выше в Л.О. window и перезапишет значение внешней переменной.

// Task 3
// Ответ: 
// 1) undefined, т.к. в коде функции ниже объявлена через var локальная переменная window.
// 2) 5, т.к. перед вызовом alert в переменную записали 5.

// Task 4
// Ответ: ошибка, не поставлена точка с запятой после обявления переменной.

// Task 5
// Ответ: нельзя. локальная переменная полностью перекрывает внешнюю.

// Task 6
// 1, 2, 3, 4. Т.к. обе функции будут обращаться каждый раз к глобальному объекту window и брать текущее значение одной и той же переменной, перезаписывая на новое.

// Unit link - https://learn.javascript.ru/closures-usage

// Task 1

// function sum (a) {
//   let f = function (b) {
//     return a + b;
//   }
//   return f;
// }

// console.log(sum(1)(2)); // 3
// console.log(sum(5)(-1)); // 4

// Task 2
function makeBuffer(str) {
  let currentStr = '';
  function buffer () {
    return currentStr;
  }
  buffer.set = function(str) {
    currentStr += toString(str);
  }
}

var buffer = makeBuffer();

// добавить значения к буферу
buffer('Замыкания');
buffer(' Использовать');
buffer(' Нужно!');

// получить текущее значение
console.log(buffer()); // Замыкания Использовать Нужно!
